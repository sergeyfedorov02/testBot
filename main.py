import telebot
from telebot import types

from youtube_dl import YoutubeDL

from pafy import pafy

import cv2

from PIL import Image

import os

import datetime

import config


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –Ω–∞—à–µ–≥–æ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å —Ç–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
class VideoInfo:
    def __init__(self):
        self.url = None  # URL —Ç–µ–∫—É—â–µ–≥–æ –≤–∏–¥–µ–æ
        self.last_GIF = None  # True - –µ—Å—Ç—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–∏—Ñ–∫–∞, –∑–Ω–∞—á–∏—Ç –º–æ–∂–Ω–æ –µ–µ –ø—Ä–∏—Å–ª–∞—Ç—å –µ—â–µ —Ä–∞–∑
        self.id = None  # Id –≤–∏–¥–µ–æ
        self.views = None  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ
        self.date = None  # –î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ
        self.duration = None  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        self.title = None  # –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
        self.wait_answer = True  # True - –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –∏–∑ callback —Ñ—É–Ω–∫—Ü–∏–∏ (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫)
        self.message_inline_button_id = None  # Id —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ —Å Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –µ–µ —É–¥–∞–ª–∏—Ç—å
        self.wait_GIF = False  # True - —Å–µ–π—á–∞—Å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è GIF-–∫–∞, —á—Ç–æ–±—ã –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ –≤–∏–¥–µ–æ –ø–æ –ø—Ä–∏–Ω—è—Ç–æ–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Å—ã–ª–∫–∏
def get_information_from_youtube_video(current_youtube_video_link):
    youtube_dl_opts = {
        'ignoreerrors': True,
        'quiet': True,
        # –°—é–¥–∞ —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ–∞–π–ª cookie –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ YouTube, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ 18+
        'cookiefile': 'youtube.com_cookies.txt'
    }

    with YoutubeDL(youtube_dl_opts) as ydl:
        info_dict = ydl.extract_info(current_youtube_video_link, download=False)

        # –¢–∞–∫–æ–≥–æ –≤–∏–¥–µ–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if info_dict is None:
            return None
        else:
            cur_video_id = info_dict.get("id", None)
            cur_video_views = info_dict.get("view_count", None)
            cur_video_date = info_dict.get("upload_date", None)
            cur_video_duration = info_dict.get("duration", None)
            cur_video_title = info_dict.get("title", None)
            return cur_video_id, cur_video_views, cur_video_date, cur_video_duration, cur_video_title


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º URL
def get_info_about_url(new_youtube_link):
    # –ü–æ–ª—É—á–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    info_from_video = get_information_from_youtube_video(new_youtube_link)

    # –í–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ä–æ–ª–∏–∫ –Ω–∞ YouTube
    if not new_youtube_link.startswith("https://www.youtube.com/watch?v=") and not new_youtube_link.startswith(
            "youtube.com/watch?v=") and not new_youtube_link.startswith("https://youtu.be/"):
        return False, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ä–æ–ª–∏–∫ –≤ YouTube üò¢"

    # –í–∏–¥–µ–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    elif info_from_video is None:
        return False, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üò¢"

    else:
        return True, "–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ ?"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è–ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö timecodes
def get_info_about_timecodes(timecodes, video_duration):
    split_message = timecodes.split(" ")

    if len(split_message) != 2:
        return False, "–í—ã –Ω–µ –≤–≤–µ–ª–∏ 2 –∑–Ω–∞—á–µ–Ω–∏—è! üò¢"
    else:
        first_step = time_step_info(split_message[0], video_duration)
        if not first_step[0]:
            return False, "–í—ã –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ <b>–ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º –æ–¥–∏–Ω</b> –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ üò¢\n{0}üò¢".format(
                first_step[1])

        second_step = time_step_info(split_message[1], video_duration)
        if not second_step[0]:
            return False, "–í—ã –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ <b>–ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º –¥–≤–∞</b> –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ üò¢\n{0}üò¢".format(
                second_step[1])

        return True, "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, —Å–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º GIF-–∫—É üòä", [first_step, second_step]


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö
# –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–∞–ø–∏—Å–∏ 2.20.39 -> hours=2 minutes =20 seconds = 30
def video_duration_info(cur_duration):
    hours = int(cur_duration / 3600)
    minutes = int((cur_duration - hours * 3600) / 60)
    seconds = int((cur_duration - hours * 3600) - minutes * 60)

    return hours, minutes, seconds


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞ –¢–∞–π–º—Å—Ç–µ–ø–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É:
# –ü—Ä–∏–º–µ—Ä: —á–∞—Å—ã.–º–∏–Ω—É—Ç—ã.—Å–µ–∫—É–Ω–¥—ã
def time_step_info(time_step, video_duration):
    split_time_step = time_step.split(".")
    err_message = "–í—Å–µ —Ö–æ—Ä–æ—à–æ"
    info_video_duration = video_duration_info(video_duration)

    # –ù–µ –≤–≤–µ–ª–∏ —Ç—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É
    if len(split_time_step) != 3:
        err_message = "–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ 3 –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É"
        return False, err_message, None

    # –í–≤–µ–ª–∏ —Ç—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–æ —ç—Ç–æ –Ω–µ —á–∏—Å–ª–∞
    elif not split_time_step[0].isdigit() or not split_time_step[1].isdigit() or not split_time_step[2].isdigit():
        err_message = "–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ 3 –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–æ —ç—Ç–æ –Ω–µ —á–∏—Å–ª–∞"
        return False, err_message, None

    # –í–≤–µ–ª–∏ —Ç—Ä–∏ —á–∏—Å–ª–∞, –∏ —á–∏—Å–ª–æ —á–∞—Å–æ–≤ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
    elif int(split_time_step[0]) > info_video_duration[0]:
        err_message = "–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤"
        return False, err_message, None

    # –ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ -> –º–∏–Ω—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
    elif int(split_time_step[0]) == info_video_duration[0] and int(split_time_step[1]) > info_video_duration[1]:
        err_message = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ"
        return False, err_message, None

    # –ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ù–ï –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ -> –º–∏–Ω—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0 –¥–æ 59
    elif int(split_time_step[0]) != info_video_duration[0] and int(split_time_step[1]) not in range(0, 60):
        err_message = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0 - 59"
        return False, err_message, None

    # –ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ max —á–∞—Å–æ–≤ –∏ max –º–∏–Ω—É—Ç -> —Å–µ–∫—É–Ω–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
    elif int(split_time_step[0]) == info_video_duration[0] and int(split_time_step[1]) == info_video_duration[1] \
            and int(split_time_step[2]) > info_video_duration[2]:
        err_message = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥, –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ"
        return False, err_message, None

    # –ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ù–ï max —á–∞—Å–æ–≤ -> —Å–µ–∫—É–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0 –¥–æ 59
    elif int(split_time_step[2]) not in range(0, 60):
        err_message = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥, –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0 - 59"
        return False, err_message, None

    value = int(split_time_step[0]) * 3600 + int(split_time_step[1]) * 60 + int(split_time_step[2])
    return True, err_message, value


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
# –≥–∞–π–¥ https://clck.ru/32fxCx
def get_current_frames(url, numbers, current_chat_id):
    ydl_opts = {
        'ignoreerrors': True,
        'quiet': True,
        # –°—é–¥–∞ —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ–∞–π–ª cookie –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ YouTube, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ 18+
        'cookiefile': 'youtube.com_cookies.txt'
    }

    video = pafy.new(url, ydl_opts=ydl_opts)

    best = video.getbest(preftype="mp4")

    # –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —Å –≤–∏–¥–µ–æ
    cap = cv2.VideoCapture(best.url)

    fps = cap.get(cv2.CAP_PROP_FPS)  # –ü–æ–ª—É—á–µ–Ω–∏–µ fps
    cur_num = 1
    for number in numbers:
        # —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä –∫–∞–¥—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö * fps
        frame_number = number * fps

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–¥—Ä
        cap.set(cv2.CAP_PROP_POS_FRAMES, frame_number)

        # –ß—Ç–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
        ret, frame = cap.read()

        # –û–∂–∏–¥–∞–Ω–∏–µ
        # cv2.waitKey()

        # –°–æ–∑–¥–∞–¥–∏–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞–¥—Ä–∞
        filename = fr"{current_chat_id}-{cur_num}.png"
        cv2.imwrite(filename, frame)
        cur_num += 1

    # –ó–∞–∫—Ä–æ–µ–º capture
    # cap.release()
    # cv2.destroyAllWindows()
    return cur_num


# –°–æ–∑–¥–∞–¥–∏–º GIF-–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –¥–≤—É—Ö –∫–∞–¥—Ä–æ–≤ –≤–∏–¥–µ–æ
def create_gif_from_images(steps, name, youtube_video_link, cur_chat_id):
    all_numbers = get_current_frames(youtube_video_link, steps, cur_chat_id)

    frames = []
    for frame_number in range(1, all_numbers):
        frame = Image.open(f'{cur_chat_id}-{frame_number}.png')
        frames.append(frame)

    frames[0].save(
        rf'{cur_chat_id}-{name}.gif',
        save_all=True,
        append_images=frames[1:],
        optimize=True,
        duration=250,
        loop=0
    )

    # –£–¥–∞–ª–∏–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
    for num in range(1, all_numbers):
        os.remove(fr"{cur_chat_id}-{num}.png")


if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞—Å—Å–∞ TeleBot, –∫—É–¥–∞ –ø–µ—Ä–µ–¥–∞–¥–∏–º TOKEN –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    bot = telebot.TeleBot(config.TOKEN)

    # –î–ª—è –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–≤–µ–¥–µ–º —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ key - chat.id –∏ value - –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ VideoInfo
    chat_dict = {}


    # –ù–∞–ø–∏—à–µ–º –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
    @bot.message_handler(commands=['start'])
    def welcome(message):
        chat_id = message.chat.id  # –ü–æ–ª—É—á–µ–º id —á–∞—Ç–∞

        # –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ª–∏ —Å–µ–π—á–∞—Å GIF-–∫–∞?
        if chat_id in chat_dict.keys() and chat_dict[chat_id].wait_GIF:
            bot.reply_to(message, "üïê –°–µ–π—á–∞—Å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è GIF-–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∞ –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å üïê")

        else:

            # –ë—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–∞—Ç–∞ -> —É–¥–∞–ª–∏–º Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å
            if chat_id in chat_dict.keys() and chat_dict[chat_id].message_inline_button_id is not None:
                bot.edit_message_reply_markup(chat_id=chat_id, message_id=chat_dict[chat_id].message_inline_button_id,
                                              reply_markup=None)

            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ VideoInfo, –≥–¥–µ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∏–Ω—Ñ–æ –æ –≤–∏–¥–µ–æ
            video_info = VideoInfo()

            # –°–æ–∑–¥–∞–µ–º –≤ —Å–ª–æ–≤–∞—Ä–µ chat_dict –ø–∞—Ä—É, –≥–¥–µ key - id —á–∞—Ç–∞, value - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ
            chat_dict[chat_id] = video_info

            # –û—Ç—Å—ã–ª–∞–µ–º —Å—Ç–∏–∫–µ—Ä
            sticker = open('AnimatedSticker.tgs', 'rb')
            bot.send_sticker(message.chat.id, sticker)

            # –û—Ç—Å—ã–ª–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.send_message(chat_id,
                             "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n"
                             "–Ø - <b>{1.first_name}</b>, –±–æ—Ç –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è GIF-–∫–∏ –∏–∑ –≤–∏–¥–µ–æ —Å YouTube –ø—Ä–∏ –ø–æ–º–æ—â–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∞–π–º—Å—Ç–µ–ø–æ–≤."
                             "\n\n<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>"
                             "\n/start - –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"
                             "\n/help - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"
                             "\n/getInfoAboutVideo - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≤–∏–¥–µ–æ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ URL)"
                             "\n/getInfoAboutYouTuber - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –Æ—Ç—É–±–µ—Ä–µ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ URL)"
                             "\n\n–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–ª–∏–∫ –≤ YouTube üòä".format(message.from_user, bot.get_me()),
                             parse_mode='html', reply_markup=types.ReplyKeyboardRemove())


    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    @bot.message_handler(content_types=['text'])
    def message_from_bot(message):
        if message.chat.type == "private":

            chat_id = message.chat.id  # –ü–æ–ª—É—á–∏–º id —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
            current_chat = chat_dict[chat_id]  # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω–∞—à–µ–º—É chat.id —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è

            current_text = message.text  # –ø–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ–∫—Å—Ç (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ youtube –≤–∏–¥–µ–æ)

            # –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ª–∏ —Å–µ–π—á–∞—Å GIF-–∫–∞?
            if current_chat.wait_GIF:
                bot.reply_to(message, "üïê –°–µ–π—á–∞—Å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è GIF-–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∞ –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å üïê")

            else:

                # –ë—ã–ª–∞ –ª–∏ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?
                if current_chat.url is None:

                    # –°—Å—ã–ª–∫–∞ –Ω–µ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ -> –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                    info_about_url = get_info_about_url(current_text)

                    # –ë—ã–ª–∞ –ª–∏ –≤–∞–ª–∏–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞:
                    if not info_about_url[0]:
                        bot.reply_to(message, info_about_url[1])
                    else:
                        # –ü–æ–ª—É—á–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
                        info_from_video = get_information_from_youtube_video(current_text)

                        # –û–±–Ω–æ–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –≤–∏–¥–µ–æ –≤ —Å–ª–æ–≤–∞—Ä–µ chat_dict –ø–æ key - chat.id
                        current_chat.url = current_text
                        current_chat.id = info_from_video[0]
                        current_chat.views = info_from_video[1]
                        current_chat.date = info_from_video[2]
                        current_chat.duration = info_from_video[3]
                        current_chat.title = info_from_video[4]

                        current_chat.wait_answer = True  # –ü–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ -> –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å

                        # –î–æ–±–∞–≤–∏–º Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –º—ã —Å–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è)
                        markup = types.InlineKeyboardMarkup(row_width=2)
                        item1 = types.InlineKeyboardButton("üëç –î–∞, –∫–æ–Ω–µ—á–Ω–æ", callback_data="yep")
                        item2 = types.InlineKeyboardButton("üëé –ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ", callback_data="nope")
                        markup.add(item1, item2)

                        msg = bot.send_message(chat_id, info_about_url[1],
                                               reply_markup=markup)
                        current_chat.message_inline_button_id = msg.id

                else:  # —Å—Å—ã–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞

                    # –û–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞—à –≤–æ–ø—Ä–æ—Å? (–±—ã–ª–∞ –ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Inline —Å –æ—Ç–≤–µ—Ç–æ–º)
                    if current_chat.wait_answer:

                        # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ -> –∫–Ω–æ–ø–∫–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
                        bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –≤—ã–±—Ä–∞–≤ –∫–Ω–æ–ø–∫—É —Å –æ—Ç–≤–µ—Ç–æ–º üëÜ")
                    else:  # –ù–µ –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ -> –∫–Ω–æ–ø–∫–∞ —É–∂–µ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞

                        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–Ω–æ–ø–∫–∏ ("üôè –•–æ—á—É –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É üôå")
                        if message.text == "üôè –•–æ—á—É –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É üôå":
                            # –û–±–Ω–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–∏—è url –∏ last_url
                            current_chat.last_GIF = True
                            current_chat.url = None
                            bot.send_message(chat_id, "–•–æ—Ä–æ—à–æ, –æ–∂–∏–¥–∞—é –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ üòÄ",
                                             reply_markup=types.ReplyKeyboardRemove())

                        # –ö–Ω–æ–ø–∫–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ -> –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        else:
                            # –ü–æ–ª—É—á–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–≤–µ–¥–µ–Ω—ã—Ö timecodes
                            info_about_timecodes = get_info_about_timecodes(current_text, current_chat.duration)

                            # –ë—ã–ª–∏ –ª–∏ –≤–≤–µ–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è timecodes ?
                            if not info_about_timecodes[0]:
                                bot.reply_to(message, info_about_timecodes[1], parse_mode='html')
                            else:
                                # timecodes –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ -> —Ñ–æ—Ä–º–∏—Ä—É–µ–º GIF
                                current_chat.wait_GIF = True  # –í–æ –≤—Ä–µ–º—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è GIF –Ω–µ–ª—å–∑—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–ø—Ä–æ—Å—ã
                                bot.send_message(chat_id, info_about_timecodes[1],
                                                 reply_markup=types.ReplyKeyboardRemove())

                                # –ü–æ–ª—É—á–∏–º –≤—Å–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–∞–π–º—Å—Ç–µ–ø–æ–≤
                                steps_values = []
                                steps = info_about_timecodes[2]
                                for num in range(len(steps)):
                                    steps_values.append(int(steps[num][2]))

                                # –ü–æ–ª—É—á–∞–µ–º GIF_–∫—É
                                create_gif_from_images(steps_values, "new", current_chat.url, chat_id)

                                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF-–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                                photo = open(rf"{chat_id}-new.gif", 'rb')
                                bot.send_animation(chat_id, photo)

                                current_chat.wait_GIF = False

                                # –û–±–Ω–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–∏—è url –∏ last_url
                                current_chat.last_url = True
                                current_chat.url = None

                                bot.send_message(chat_id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–ª–∏–∫ –≤ YouTube üòä")


    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Ä–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        chat_id = call.message.chat.id  # –ü–æ–ª—É—á–∏–º id —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
        current_chat = chat_dict[chat_id]  # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω–∞—à–µ–º—É chat.id —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è

        try:
            if call.message:
                if call.data == "yep":
                    year = int(current_chat.date[:4])
                    month = int(current_chat.date[4:6])
                    day = int(current_chat.date[6:])
                    d = datetime.datetime(year, month, day)
                    bot.send_message(chat_id,
                                     "<b>–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:</b> {0}\n"
                                     "<b>–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:</b> {1} {2} {3}\n"
                                     "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:</b> {4}\n"
                                     "<b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö:</b> {5}\n".format(current_chat.title, day,
                                                                                          d.strftime("%B"), year,
                                                                                          current_chat.views,
                                                                                          current_chat.duration),
                                     parse_mode='html')
                elif call.data == "nope":
                    bot.send_message(chat_id, "–•–æ—Ä–æ—à–æ, –Ω–µ –±—É–¥–µ–º –≤—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ")

                current_chat.wait_answer = False

                # –£–¥–∞–ª–µ–Ω–∏–µ Inline –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫)
                bot.edit_message_text(chat_id=chat_id, message_id=current_chat.message_inline_button_id,
                                      text="–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ ?", reply_markup=None)
                current_chat.message_inline_button_id = None  # –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –æ–ø—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–≤–µ –∫–Ω–æ–ø–∫–∏)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item = types.KeyboardButton("üôè –•–æ—á—É –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É üôå")
            markup.add(item)

            info_video_duration = video_duration_info(current_chat.duration)

            bot.send_message(chat_id,
                             "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ö–æ—Ç—è –±—ã 2 —Ç–∞–π–º—Å—Ç–µ–ø–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ üòä\n"
                             "<b>–ü—Ä–∞–≤–∏–ª–æ –≤–≤–æ–¥–∞:</b> —á–∞—Å—ã.–º–∏–Ω—É—Ç—ã.—Å–µ–∫—É–Ω–¥—ã[–ü—Ä–æ–±–µ–ª]—á–∞—Å—ã.–º–∏–Ω—É—Ç—ã.—Å–µ–∫—É–Ω–¥—ã[–ü—Ä–æ–±–µ–ª]–∏ —Ç.–¥.\n"
                             "<b>–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ –∫—Ä–∞–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:</b>{0}.{1}.{2} {3}.{4}.{5}".format(
                                 0, 0, 0, info_video_duration[0], info_video_duration[1], info_video_duration[2]),
                             parse_mode='html', reply_markup=markup)

        except Exception as e:
            print(repr(e))


    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot.polling(none_stop=True)
